{"ast":null,"code":"import setAuthToken from \"../utils/setAuthToken\";\nimport Axios from \"axios\";\nexport const registerUser = (userData, history, dispatch) => {\n  console.log(\"userData\", userData);\n  Axios.post(\"/api/users/register\", userData).then(res => {\n    history.push(\"/login\");\n  }).catch(err => {\n    dispatch({\n      type: \"GET_ERRORS\",\n      payload: err.response.data\n    });\n  });\n};\nexport const loginUser = userData => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    payload: userData\n  };\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    payload: decoded\n  };\n};\nexport const setLoggedIn = bool => {\n  return {\n    type: \"SET_LOGGED_IN\",\n    payload: bool\n  };\n};\nexport const logoutUser = () => {\n  // remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // remove auth header for future requests\n\n  setAuthToken(false); // set current user to empty object {} which will set isAuthenticated to false\n\n  return setCurrentUser({});\n};","map":{"version":3,"sources":["C:/Tutorial_brillio/client/src/redux/actions/authActions.js"],"names":["setAuthToken","Axios","registerUser","userData","history","dispatch","console","log","post","then","res","push","catch","err","type","payload","response","data","loginUser","setCurrentUser","decoded","setLoggedIn","bool","logoutUser","localStorage","removeItem"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,QAApB,KAAiC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACAF,EAAAA,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAkCL,QAAlC,EACIM,IADJ,CACSC,GAAG,IAAI;AACVN,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACF,GAHJ,EAIIC,KAJJ,CAIUC,GAAG,IAAI;AACXR,IAAAA,QAAQ,CAAC;AACNS,MAAAA,IAAI,EAAE,YADA;AAENC,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFhB,KAAD,CAAR;AAIF,GATJ;AAUF,CAZM;AAcP,OAAO,MAAMC,SAAS,GAAGf,QAAQ,IAAI;AAClC,SAAO;AACJW,IAAAA,IAAI,EAAE,kBADF;AAEJC,IAAAA,OAAO,EAAEZ;AAFL,GAAP;AAIF,CALM;AAOP,OAAO,MAAMgB,cAAc,GAAGC,OAAO,IAAI;AACtC,SAAO;AACJN,IAAAA,IAAI,EAAE,kBADF;AAEJC,IAAAA,OAAO,EAAEK;AAFL,GAAP;AAIF,CALM;AAOP,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAChC,SAAO;AACJR,IAAAA,IAAI,EAAE,eADF;AAEJC,IAAAA,OAAO,EAAEO;AAFL,GAAP;AAIF,CALM;AAOP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC7B;AACAC,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB,EAF6B,CAG7B;;AACAzB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ6B,CAK7B;;AACA,SAAOmB,cAAc,CAAC,EAAD,CAArB;AACF,CAPM","sourcesContent":["import setAuthToken from \"../utils/setAuthToken\";\r\nimport Axios from \"axios\";\r\n\r\nexport const registerUser = (userData, history, dispatch) => {\r\n   console.log(\"userData\", userData);\r\n   Axios.post(\"/api/users/register\", userData)\r\n      .then(res => {\r\n         history.push(\"/login\");\r\n      })\r\n      .catch(err => {\r\n         dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: err.response.data,\r\n         });\r\n      });\r\n};\r\n\r\nexport const loginUser = userData => {\r\n   return {\r\n      type: \"SET_CURRENT_USER\",\r\n      payload: userData,\r\n   };\r\n};\r\n\r\nexport const setCurrentUser = decoded => {\r\n   return {\r\n      type: \"SET_CURRENT_USER\",\r\n      payload: decoded,\r\n   };\r\n};\r\n\r\nexport const setLoggedIn = bool => {\r\n   return {\r\n      type: \"SET_LOGGED_IN\",\r\n      payload: bool,\r\n   };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n   // remove token from local storage\r\n   localStorage.removeItem(\"jwtToken\");\r\n   // remove auth header for future requests\r\n   setAuthToken(false);\r\n   // set current user to empty object {} which will set isAuthenticated to false\r\n   return setCurrentUser({});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}