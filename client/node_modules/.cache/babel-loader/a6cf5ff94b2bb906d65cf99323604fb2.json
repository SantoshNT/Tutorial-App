{"ast":null,"code":"/*!\n * Toastify js 1.11.1\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function (root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function (global) {\n  // Object initialization\n  var Toastify = function (options) {\n    // Returning a new init object\n    return new Toastify.lib.init(options);\n  },\n      // Library version\n  version = \"1.11.1\"; // Set the default global options\n\n\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {},\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {},\n    offset: {\n      x: 0,\n      y: 0\n    },\n    escapeMarkup: true,\n    style: {\n      background: ''\n    }\n  }; // Defining the prototype of the object\n\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n    constructor: Toastify,\n    // Initializing the object with required parameters\n    init: function (options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      } // Creating the options object\n\n\n      this.options = {};\n      this.toastElement = null; // Validating the options\n\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n\n      this.options.node = options.node || Toastify.defaults.node; // Display content as node\n\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.style = options.style || Toastify.defaults.style;\n      this.options.style.background = Toastify.defaults.backgroundColor || options.backgroundColor; // Returning the current object for chaining functions\n\n      return this;\n    },\n    // Building the DOM element\n    buildToast: function () {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      } // Creating the DOM object\n\n\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className; // Positioning toast to left or right or center\n\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.');\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      } // Assigning gravity of element\n\n\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      } // Loop through our style object and apply styles to divElement\n\n\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      } // Adding the toast message/node\n\n\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node);\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      } // Adding a close icon to the toast\n\n\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"span\");\n        closeElement.innerHTML = \"&#10006;\";\n        closeElement.className = \"toast-close\"; // Triggering the removal of toast from DOM on close click\n\n        closeElement.addEventListener(\"click\", function (event) {\n          event.stopPropagation();\n          this.removeElement(this.toastElement);\n          window.clearTimeout(this.toastElement.timeOutValue);\n        }.bind(this)); //Calculating screen width\n\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width; // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      } // Clear timeout while toast is focused\n\n\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this; // stop countdown\n\n        divElement.addEventListener(\"mouseover\", function (event) {\n          window.clearTimeout(divElement.timeOutValue);\n        }); // add back the timeout\n\n        divElement.addEventListener(\"mouseleave\", function () {\n          divElement.timeOutValue = window.setTimeout(function () {\n            // Remove the toast from DOM\n            self.removeElement(divElement);\n          }, self.options.duration);\n        });\n      } // Adding an on-click destination path\n\n\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\"click\", function (event) {\n          event.stopPropagation();\n\n          if (this.options.newWindow === true) {\n            window.open(this.options.destination, \"_blank\");\n          } else {\n            window.location = this.options.destination;\n          }\n        }.bind(this));\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\"click\", function (event) {\n          event.stopPropagation();\n          this.options.onClick();\n        }.bind(this));\n      } // Adding offset\n\n\n      if (typeof this.options.offset === \"object\") {\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n      } // Returning the generated element\n\n\n      return divElement;\n    },\n    // Displaying the toast\n    showToast: function () {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast(); // Getting the root element to with the toast needs to be added\n\n      var rootElement;\n\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || this.options.selector instanceof ShadowRoot) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      } // Validating if root element is present in DOM\n\n\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      } // Adding the DOM element\n\n\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert); // Repositioning the toasts in case multiple toasts are present\n\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(function () {\n          // Remove the toast from DOM\n          this.removeElement(this.toastElement);\n        }.bind(this), this.options.duration); // Binding `this` for function invocation\n      } // Supporting function chaining\n\n\n      return this;\n    },\n    hideToast: function () {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n\n      this.removeElement(this.toastElement);\n    },\n    // Removing the element from the DOM\n    removeElement: function (toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\"); // Removing the element from DOM after transition end\n\n      window.setTimeout(function () {\n        // remove options node if any\n        if (this.options.node && this.options.node.parentNode) {\n          this.options.node.parentNode.removeChild(this.options.node);\n        } // Remove the element from the DOM, only when the parent node was not removed before.\n\n\n        if (toastElement.parentNode) {\n          toastElement.parentNode.removeChild(toastElement);\n        } // Calling the callback function\n\n\n        this.options.callback.call(toastElement); // Repositioning the toasts again\n\n        Toastify.reposition();\n      }.bind(this), 400); // Binding `this` for function invocation\n    }\n  }; // Positioning the toasts on the DOM\n\n  Toastify.reposition = function () {\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15\n    }; // Get all toast messages on the DOM\n\n    var allToasts = document.getElementsByClassName(\"toastify\");\n    var classUsed; // Modifying the position of each toast element\n\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length - 1); // Spacing between toasts\n\n      var offset = 15;\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width; // Show toast in center if screen with less than or equal to 360px\n\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    } // Supporting function chaining\n\n\n    return this;\n  }; // Helper function to get offset.\n\n\n  function getAxisOffsetAValue(axis, options) {\n    if (options.offset[axis]) {\n      if (isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      } else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (elem.className && elem.className.trim().split(/\\s+/gi).indexOf(yourClass) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  } // Setting up the prototype for the init object\n\n\n  Toastify.lib.init.prototype = Toastify.lib; // Returning the Toastify function to be assigned to the window object/module\n\n  return Toastify;\n});","map":{"version":3,"sources":["C:/Users/kumar.s/Desktop/Tutorial/Tutorial-App/client/node_modules/toastify-js/src/toastify.js"],"names":["root","factory","module","exports","Toastify","global","options","lib","init","version","defaults","oldestFirst","text","node","undefined","duration","selector","callback","destination","newWindow","close","gravity","positionLeft","position","backgroundColor","avatar","className","stopOnFocus","onClick","offset","x","y","escapeMarkup","style","background","prototype","toastify","constructor","toastElement","buildToast","divElement","document","createElement","console","warn","property","nodeType","Node","ELEMENT_NODE","appendChild","innerText","innerHTML","avatarElement","src","insertAdjacentElement","closeElement","addEventListener","event","stopPropagation","removeElement","window","clearTimeout","timeOutValue","bind","width","innerWidth","screen","self","setTimeout","open","location","getAxisOffsetAValue","xOffset","yOffset","transform","showToast","rootElement","getElementById","HTMLElement","ShadowRoot","body","elementToInsert","firstChild","lastChild","insertBefore","reposition","hideToast","replace","parentNode","removeChild","call","topLeftOffsetSize","top","bottom","topRightOffsetSize","offsetSize","allToasts","getElementsByClassName","classUsed","i","length","containsClass","height","offsetHeight","substr","axis","isNaN","elem","yourClass","trim","split","indexOf"],"mappings":"AAAA;;;;;;;AAOA,CAAC,UAASA,IAAT,EAAeC,OAAf,EAAwB;AACvB,MAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;AAChDD,IAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB;AACD,GAFD,MAEO;AACLD,IAAAA,IAAI,CAACI,QAAL,GAAgBH,OAAO,EAAvB;AACD;AACF,CAND,EAMG,IANH,EAMS,UAASI,MAAT,EAAiB;AACxB;AACA,MAAID,QAAQ,GAAG,UAASE,OAAT,EAAkB;AAC7B;AACA,WAAO,IAAIF,QAAQ,CAACG,GAAT,CAAaC,IAAjB,CAAsBF,OAAtB,CAAP;AACD,GAHH;AAAA,MAIE;AACAG,EAAAA,OAAO,GAAG,QALZ,CAFwB,CASxB;;;AACAL,EAAAA,QAAQ,CAACM,QAAT,GAAoB;AAClBC,IAAAA,WAAW,EAAE,IADK;AAElBC,IAAAA,IAAI,EAAE,sBAFY;AAGlBC,IAAAA,IAAI,EAAEC,SAHY;AAIlBC,IAAAA,QAAQ,EAAE,IAJQ;AAKlBC,IAAAA,QAAQ,EAAEF,SALQ;AAMlBG,IAAAA,QAAQ,EAAE,YAAY,CACrB,CAPiB;AAQlBC,IAAAA,WAAW,EAAEJ,SARK;AASlBK,IAAAA,SAAS,EAAE,KATO;AAUlBC,IAAAA,KAAK,EAAE,KAVW;AAWlBC,IAAAA,OAAO,EAAE,cAXS;AAYlBC,IAAAA,YAAY,EAAE,KAZI;AAalBC,IAAAA,QAAQ,EAAE,EAbQ;AAclBC,IAAAA,eAAe,EAAE,EAdC;AAelBC,IAAAA,MAAM,EAAE,EAfU;AAgBlBC,IAAAA,SAAS,EAAE,EAhBO;AAiBlBC,IAAAA,WAAW,EAAE,IAjBK;AAkBlBC,IAAAA,OAAO,EAAE,YAAY,CACpB,CAnBiB;AAoBlBC,IAAAA,MAAM,EAAE;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KApBU;AAqBlBC,IAAAA,YAAY,EAAE,IArBI;AAsBlBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb;AAtBW,GAApB,CAVwB,CAmCxB;;AACA9B,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAAC+B,SAAT,GAAqB;AAClCC,IAAAA,QAAQ,EAAE3B,OADwB;AAGlC4B,IAAAA,WAAW,EAAEjC,QAHqB;AAKlC;AACAI,IAAAA,IAAI,EAAE,UAASF,OAAT,EAAkB;AACtB;AACA,UAAI,CAACA,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAG,EAAV;AACD,OAJqB,CAMtB;;;AACA,WAAKA,OAAL,GAAe,EAAf;AAEA,WAAKgC,YAAL,GAAoB,IAApB,CATsB,CAWtB;;AACA,WAAKhC,OAAL,CAAaM,IAAb,GAAoBN,OAAO,CAACM,IAAR,IAAgBR,QAAQ,CAACM,QAAT,CAAkBE,IAAtD,CAZsB,CAYsC;;AAC5D,WAAKN,OAAL,CAAaO,IAAb,GAAoBP,OAAO,CAACO,IAAR,IAAgBT,QAAQ,CAACM,QAAT,CAAkBG,IAAtD,CAbsB,CAauC;;AAC7D,WAAKP,OAAL,CAAaS,QAAb,GAAwBT,OAAO,CAACS,QAAR,KAAqB,CAArB,GAAyB,CAAzB,GAA6BT,OAAO,CAACS,QAAR,IAAoBX,QAAQ,CAACM,QAAT,CAAkBK,QAA3F,CAdsB,CAc+E;;AACrG,WAAKT,OAAL,CAAaU,QAAb,GAAwBV,OAAO,CAACU,QAAR,IAAoBZ,QAAQ,CAACM,QAAT,CAAkBM,QAA9D,CAfsB,CAekD;;AACxE,WAAKV,OAAL,CAAaW,QAAb,GAAwBX,OAAO,CAACW,QAAR,IAAoBb,QAAQ,CAACM,QAAT,CAAkBO,QAA9D,CAhBsB,CAgBkD;;AACxE,WAAKX,OAAL,CAAaY,WAAb,GAA2BZ,OAAO,CAACY,WAAR,IAAuBd,QAAQ,CAACM,QAAT,CAAkBQ,WAApE,CAjBsB,CAiB2D;;AACjF,WAAKZ,OAAL,CAAaa,SAAb,GAAyBb,OAAO,CAACa,SAAR,IAAqBf,QAAQ,CAACM,QAAT,CAAkBS,SAAhE,CAlBsB,CAkBqD;;AAC3E,WAAKb,OAAL,CAAac,KAAb,GAAqBd,OAAO,CAACc,KAAR,IAAiBhB,QAAQ,CAACM,QAAT,CAAkBU,KAAxD,CAnBsB,CAmByC;;AAC/D,WAAKd,OAAL,CAAae,OAAb,GAAuBf,OAAO,CAACe,OAAR,KAAoB,QAApB,GAA+B,iBAA/B,GAAmDjB,QAAQ,CAACM,QAAT,CAAkBW,OAA5F,CApBsB,CAoB+E;;AACrG,WAAKf,OAAL,CAAagB,YAAb,GAA4BhB,OAAO,CAACgB,YAAR,IAAwBlB,QAAQ,CAACM,QAAT,CAAkBY,YAAtE,CArBsB,CAqB8D;;AACpF,WAAKhB,OAAL,CAAaiB,QAAb,GAAwBjB,OAAO,CAACiB,QAAR,IAAoBnB,QAAQ,CAACM,QAAT,CAAkBa,QAA9D,CAtBsB,CAsBkD;;AACxE,WAAKjB,OAAL,CAAakB,eAAb,GAA+BlB,OAAO,CAACkB,eAAR,IAA2BpB,QAAQ,CAACM,QAAT,CAAkBc,eAA5E,CAvBsB,CAuBuE;;AAC7F,WAAKlB,OAAL,CAAamB,MAAb,GAAsBnB,OAAO,CAACmB,MAAR,IAAkBrB,QAAQ,CAACM,QAAT,CAAkBe,MAA1D,CAxBsB,CAwB4C;;AAClE,WAAKnB,OAAL,CAAaoB,SAAb,GAAyBpB,OAAO,CAACoB,SAAR,IAAqBtB,QAAQ,CAACM,QAAT,CAAkBgB,SAAhE,CAzBsB,CAyBqD;;AAC3E,WAAKpB,OAAL,CAAaqB,WAAb,GAA2BrB,OAAO,CAACqB,WAAR,KAAwBb,SAAxB,GAAoCV,QAAQ,CAACM,QAAT,CAAkBiB,WAAtD,GAAoErB,OAAO,CAACqB,WAAvG,CA1BsB,CA0B8F;;AACpH,WAAKrB,OAAL,CAAasB,OAAb,GAAuBtB,OAAO,CAACsB,OAAR,IAAmBxB,QAAQ,CAACM,QAAT,CAAkBkB,OAA5D,CA3BsB,CA2B+C;;AACrE,WAAKtB,OAAL,CAAauB,MAAb,GAAsBvB,OAAO,CAACuB,MAAR,IAAkBzB,QAAQ,CAACM,QAAT,CAAkBmB,MAA1D,CA5BsB,CA4B4C;;AAClE,WAAKvB,OAAL,CAAa0B,YAAb,GAA4B1B,OAAO,CAAC0B,YAAR,KAAyBlB,SAAzB,GAAqCR,OAAO,CAAC0B,YAA7C,GAA4D5B,QAAQ,CAACM,QAAT,CAAkBsB,YAA1G;AACA,WAAK1B,OAAL,CAAa2B,KAAb,GAAqB3B,OAAO,CAAC2B,KAAR,IAAiB7B,QAAQ,CAACM,QAAT,CAAkBuB,KAAxD;AACA,WAAK3B,OAAL,CAAa2B,KAAb,CAAmBC,UAAnB,GAAgC9B,QAAQ,CAACM,QAAT,CAAkBc,eAAlB,IAAqClB,OAAO,CAACkB,eAA7E,CA/BsB,CAiCtB;;AACA,aAAO,IAAP;AACD,KAzCiC;AA2ClC;AACAe,IAAAA,UAAU,EAAE,YAAW;AACrB;AACA,UAAI,CAAC,KAAKjC,OAAV,EAAmB;AACjB,cAAM,6BAAN;AACD,OAJoB,CAMrB;;;AACA,UAAIkC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAF,MAAAA,UAAU,CAACd,SAAX,GAAuB,iBAAiB,KAAKpB,OAAL,CAAaoB,SAArD,CARqB,CAUrB;;AACA,UAAI,CAAC,CAAC,KAAKpB,OAAL,CAAaiB,QAAnB,EAA6B;AAC3BiB,QAAAA,UAAU,CAACd,SAAX,IAAwB,eAAe,KAAKpB,OAAL,CAAaiB,QAApD;AACD,OAFD,MAEO;AACL;AACA,YAAI,KAAKjB,OAAL,CAAagB,YAAb,KAA8B,IAAlC,EAAwC;AACtCkB,UAAAA,UAAU,CAACd,SAAX,IAAwB,gBAAxB;AACAiB,UAAAA,OAAO,CAACC,IAAR,CAAa,iGAAb;AACD,SAHD,MAGO;AACL;AACAJ,UAAAA,UAAU,CAACd,SAAX,IAAwB,iBAAxB;AACD;AACF,OAtBoB,CAwBrB;;;AACAc,MAAAA,UAAU,CAACd,SAAX,IAAwB,MAAM,KAAKpB,OAAL,CAAae,OAA3C;;AAEA,UAAI,KAAKf,OAAL,CAAakB,eAAjB,EAAkC;AAChC;AACAmB,QAAAA,OAAO,CAACC,IAAR,CAAa,wGAAb;AACD,OA9BoB,CAgCrB;;;AACA,WAAK,IAAIC,QAAT,IAAqB,KAAKvC,OAAL,CAAa2B,KAAlC,EAAyC;AACvCO,QAAAA,UAAU,CAACP,KAAX,CAAiBY,QAAjB,IAA6B,KAAKvC,OAAL,CAAa2B,KAAb,CAAmBY,QAAnB,CAA7B;AACD,OAnCoB,CAqCrB;;;AACA,UAAI,KAAKvC,OAAL,CAAaO,IAAb,IAAqB,KAAKP,OAAL,CAAaO,IAAb,CAAkBiC,QAAlB,KAA+BC,IAAI,CAACC,YAA7D,EAA2E;AACzE;AACAR,QAAAA,UAAU,CAACS,WAAX,CAAuB,KAAK3C,OAAL,CAAaO,IAApC;AACD,OAHD,MAGO;AACL,YAAI,KAAKP,OAAL,CAAa0B,YAAjB,EAA+B;AAC7BQ,UAAAA,UAAU,CAACU,SAAX,GAAuB,KAAK5C,OAAL,CAAaM,IAApC;AACD,SAFD,MAEO;AACL4B,UAAAA,UAAU,CAACW,SAAX,GAAuB,KAAK7C,OAAL,CAAaM,IAApC;AACD;;AAED,YAAI,KAAKN,OAAL,CAAamB,MAAb,KAAwB,EAA5B,EAAgC;AAC9B,cAAI2B,aAAa,GAAGX,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACAU,UAAAA,aAAa,CAACC,GAAd,GAAoB,KAAK/C,OAAL,CAAamB,MAAjC;AAEA2B,UAAAA,aAAa,CAAC1B,SAAd,GAA0B,iBAA1B;;AAEA,cAAI,KAAKpB,OAAL,CAAaiB,QAAb,IAAyB,MAAzB,IAAmC,KAAKjB,OAAL,CAAagB,YAAb,KAA8B,IAArE,EAA2E;AACzE;AACAkB,YAAAA,UAAU,CAACS,WAAX,CAAuBG,aAAvB;AACD,WAHD,MAGO;AACL;AACAZ,YAAAA,UAAU,CAACc,qBAAX,CAAiC,YAAjC,EAA+CF,aAA/C;AACD;AACF;AACF,OA9DoB,CAgErB;;;AACA,UAAI,KAAK9C,OAAL,CAAac,KAAb,KAAuB,IAA3B,EAAiC;AAC/B;AACA,YAAImC,YAAY,GAAGd,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAnB;AACAa,QAAAA,YAAY,CAACJ,SAAb,GAAyB,UAAzB;AAEAI,QAAAA,YAAY,CAAC7B,SAAb,GAAyB,aAAzB,CAL+B,CAO/B;;AACA6B,QAAAA,YAAY,CAACC,gBAAb,CACE,OADF,EAEE,UAASC,KAAT,EAAgB;AACdA,UAAAA,KAAK,CAACC,eAAN;AACA,eAAKC,aAAL,CAAmB,KAAKrB,YAAxB;AACAsB,UAAAA,MAAM,CAACC,YAAP,CAAoB,KAAKvB,YAAL,CAAkBwB,YAAtC;AACD,SAJD,CAIEC,IAJF,CAIO,IAJP,CAFF,EAR+B,CAiB/B;;AACA,YAAIC,KAAK,GAAGJ,MAAM,CAACK,UAAP,GAAoB,CAApB,GAAwBL,MAAM,CAACK,UAA/B,GAA4CC,MAAM,CAACF,KAA/D,CAlB+B,CAoB/B;AACA;;AACA,YAAI,CAAC,KAAK1D,OAAL,CAAaiB,QAAb,IAAyB,MAAzB,IAAmC,KAAKjB,OAAL,CAAagB,YAAb,KAA8B,IAAlE,KAA2E0C,KAAK,GAAG,GAAvF,EAA4F;AAC1F;AACAxB,UAAAA,UAAU,CAACc,qBAAX,CAAiC,YAAjC,EAA+CC,YAA/C;AACD,SAHD,MAGO;AACL;AACAf,UAAAA,UAAU,CAACS,WAAX,CAAuBM,YAAvB;AACD;AACF,OA9FoB,CAgGrB;;;AACA,UAAI,KAAKjD,OAAL,CAAaqB,WAAb,IAA4B,KAAKrB,OAAL,CAAaS,QAAb,GAAwB,CAAxD,EAA2D;AACzD,YAAIoD,IAAI,GAAG,IAAX,CADyD,CAEzD;;AACA3B,QAAAA,UAAU,CAACgB,gBAAX,CACE,WADF,EAEE,UAASC,KAAT,EAAgB;AACdG,UAAAA,MAAM,CAACC,YAAP,CAAoBrB,UAAU,CAACsB,YAA/B;AACD,SAJH,EAHyD,CASzD;;AACAtB,QAAAA,UAAU,CAACgB,gBAAX,CACE,YADF,EAEE,YAAW;AACThB,UAAAA,UAAU,CAACsB,YAAX,GAA0BF,MAAM,CAACQ,UAAP,CACxB,YAAW;AACT;AACAD,YAAAA,IAAI,CAACR,aAAL,CAAmBnB,UAAnB;AACD,WAJuB,EAKxB2B,IAAI,CAAC7D,OAAL,CAAaS,QALW,CAA1B;AAOD,SAVH;AAYD,OAvHoB,CAyHrB;;;AACA,UAAI,OAAO,KAAKT,OAAL,CAAaY,WAApB,KAAoC,WAAxC,EAAqD;AACnDsB,QAAAA,UAAU,CAACgB,gBAAX,CACE,OADF,EAEE,UAASC,KAAT,EAAgB;AACdA,UAAAA,KAAK,CAACC,eAAN;;AACA,cAAI,KAAKpD,OAAL,CAAaa,SAAb,KAA2B,IAA/B,EAAqC;AACnCyC,YAAAA,MAAM,CAACS,IAAP,CAAY,KAAK/D,OAAL,CAAaY,WAAzB,EAAsC,QAAtC;AACD,WAFD,MAEO;AACL0C,YAAAA,MAAM,CAACU,QAAP,GAAkB,KAAKhE,OAAL,CAAaY,WAA/B;AACD;AACF,SAPD,CAOE6C,IAPF,CAOO,IAPP,CAFF;AAWD;;AAED,UAAI,OAAO,KAAKzD,OAAL,CAAasB,OAApB,KAAgC,UAAhC,IAA8C,OAAO,KAAKtB,OAAL,CAAaY,WAApB,KAAoC,WAAtF,EAAmG;AACjGsB,QAAAA,UAAU,CAACgB,gBAAX,CACE,OADF,EAEE,UAASC,KAAT,EAAgB;AACdA,UAAAA,KAAK,CAACC,eAAN;AACA,eAAKpD,OAAL,CAAasB,OAAb;AACD,SAHD,CAGEmC,IAHF,CAGO,IAHP,CAFF;AAOD,OAhJoB,CAkJrB;;;AACA,UAAG,OAAO,KAAKzD,OAAL,CAAauB,MAApB,KAA+B,QAAlC,EAA4C;AAE1C,YAAIC,CAAC,GAAGyC,mBAAmB,CAAC,GAAD,EAAM,KAAKjE,OAAX,CAA3B;AACA,YAAIyB,CAAC,GAAGwC,mBAAmB,CAAC,GAAD,EAAM,KAAKjE,OAAX,CAA3B;AAEA,YAAIkE,OAAO,GAAG,KAAKlE,OAAL,CAAaiB,QAAb,IAAyB,MAAzB,GAAkCO,CAAlC,GAAsC,MAAMA,CAA1D;AACA,YAAI2C,OAAO,GAAG,KAAKnE,OAAL,CAAae,OAAb,IAAwB,cAAxB,GAAyCU,CAAzC,GAA6C,MAAMA,CAAjE;AAEAS,QAAAA,UAAU,CAACP,KAAX,CAAiByC,SAAjB,GAA6B,eAAeF,OAAf,GAAyB,GAAzB,GAA+BC,OAA/B,GAAyC,GAAtE;AAED,OA7JoB,CA+JrB;;;AACA,aAAOjC,UAAP;AACD,KA7MiC;AA+MlC;AACAmC,IAAAA,SAAS,EAAE,YAAW;AACpB;AACA,WAAKrC,YAAL,GAAoB,KAAKC,UAAL,EAApB,CAFoB,CAIpB;;AACA,UAAIqC,WAAJ;;AACA,UAAI,OAAO,KAAKtE,OAAL,CAAaU,QAApB,KAAiC,QAArC,EAA+C;AAC7C4D,QAAAA,WAAW,GAAGnC,QAAQ,CAACoC,cAAT,CAAwB,KAAKvE,OAAL,CAAaU,QAArC,CAAd;AACD,OAFD,MAEO,IAAI,KAAKV,OAAL,CAAaU,QAAb,YAAiC8D,WAAjC,IAAgD,KAAKxE,OAAL,CAAaU,QAAb,YAAiC+D,UAArF,EAAiG;AACtGH,QAAAA,WAAW,GAAG,KAAKtE,OAAL,CAAaU,QAA3B;AACD,OAFM,MAEA;AACL4D,QAAAA,WAAW,GAAGnC,QAAQ,CAACuC,IAAvB;AACD,OAZmB,CAcpB;;;AACA,UAAI,CAACJ,WAAL,EAAkB;AAChB,cAAM,6BAAN;AACD,OAjBmB,CAmBpB;;;AACA,UAAIK,eAAe,GAAG7E,QAAQ,CAACM,QAAT,CAAkBC,WAAlB,GAAgCiE,WAAW,CAACM,UAA5C,GAAyDN,WAAW,CAACO,SAA3F;AACAP,MAAAA,WAAW,CAACQ,YAAZ,CAAyB,KAAK9C,YAA9B,EAA4C2C,eAA5C,EArBoB,CAuBpB;;AACA7E,MAAAA,QAAQ,CAACiF,UAAT;;AAEA,UAAI,KAAK/E,OAAL,CAAaS,QAAb,GAAwB,CAA5B,EAA+B;AAC7B,aAAKuB,YAAL,CAAkBwB,YAAlB,GAAiCF,MAAM,CAACQ,UAAP,CAC/B,YAAW;AACT;AACA,eAAKT,aAAL,CAAmB,KAAKrB,YAAxB;AACD,SAHD,CAGEyB,IAHF,CAGO,IAHP,CAD+B,EAK/B,KAAKzD,OAAL,CAAaS,QALkB,CAAjC,CAD6B,CAO1B;AACJ,OAlCmB,CAoCpB;;;AACA,aAAO,IAAP;AACD,KAtPiC;AAwPlCuE,IAAAA,SAAS,EAAE,YAAW;AACpB,UAAI,KAAKhD,YAAL,CAAkBwB,YAAtB,EAAoC;AAClCD,QAAAA,YAAY,CAAC,KAAKvB,YAAL,CAAkBwB,YAAnB,CAAZ;AACD;;AACD,WAAKH,aAAL,CAAmB,KAAKrB,YAAxB;AACD,KA7PiC;AA+PlC;AACAqB,IAAAA,aAAa,EAAE,UAASrB,YAAT,EAAuB;AACpC;AACA;AACAA,MAAAA,YAAY,CAACZ,SAAb,GAAyBY,YAAY,CAACZ,SAAb,CAAuB6D,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,CAAzB,CAHoC,CAKpC;;AACA3B,MAAAA,MAAM,CAACQ,UAAP,CACE,YAAW;AACT;AACA,YAAI,KAAK9D,OAAL,CAAaO,IAAb,IAAqB,KAAKP,OAAL,CAAaO,IAAb,CAAkB2E,UAA3C,EAAuD;AACrD,eAAKlF,OAAL,CAAaO,IAAb,CAAkB2E,UAAlB,CAA6BC,WAA7B,CAAyC,KAAKnF,OAAL,CAAaO,IAAtD;AACD,SAJQ,CAMT;;;AACA,YAAIyB,YAAY,CAACkD,UAAjB,EAA6B;AAC3BlD,UAAAA,YAAY,CAACkD,UAAb,CAAwBC,WAAxB,CAAoCnD,YAApC;AACD,SATQ,CAWT;;;AACA,aAAKhC,OAAL,CAAaW,QAAb,CAAsByE,IAAtB,CAA2BpD,YAA3B,EAZS,CAcT;;AACAlC,QAAAA,QAAQ,CAACiF,UAAT;AACD,OAhBD,CAgBEtB,IAhBF,CAgBO,IAhBP,CADF,EAkBE,GAlBF,EANoC,CAyBjC;AACJ;AA1RiC,GAApC,CApCwB,CAiUxB;;AACA3D,EAAAA,QAAQ,CAACiF,UAAT,GAAsB,YAAW;AAE/B;AACA,QAAIM,iBAAiB,GAAG;AACtBC,MAAAA,GAAG,EAAE,EADiB;AAEtBC,MAAAA,MAAM,EAAE;AAFc,KAAxB;AAIA,QAAIC,kBAAkB,GAAG;AACvBF,MAAAA,GAAG,EAAE,EADkB;AAEvBC,MAAAA,MAAM,EAAE;AAFe,KAAzB;AAIA,QAAIE,UAAU,GAAG;AACfH,MAAAA,GAAG,EAAE,EADU;AAEfC,MAAAA,MAAM,EAAE;AAFO,KAAjB,CAX+B,CAgB/B;;AACA,QAAIG,SAAS,GAAGvD,QAAQ,CAACwD,sBAAT,CAAgC,UAAhC,CAAhB;AAEA,QAAIC,SAAJ,CAnB+B,CAqB/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC;AACA,UAAIE,aAAa,CAACL,SAAS,CAACG,CAAD,CAAV,EAAe,cAAf,CAAb,KAAgD,IAApD,EAA0D;AACxDD,QAAAA,SAAS,GAAG,cAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,GAAG,iBAAZ;AACD;;AAED,UAAII,MAAM,GAAGN,SAAS,CAACG,CAAD,CAAT,CAAaI,YAA1B;AACAL,MAAAA,SAAS,GAAGA,SAAS,CAACM,MAAV,CAAiB,CAAjB,EAAoBN,SAAS,CAACE,MAAV,GAAiB,CAArC,CAAZ,CATyC,CAUzC;;AACA,UAAIvE,MAAM,GAAG,EAAb;AAEA,UAAImC,KAAK,GAAGJ,MAAM,CAACK,UAAP,GAAoB,CAApB,GAAwBL,MAAM,CAACK,UAA/B,GAA4CC,MAAM,CAACF,KAA/D,CAbyC,CAezC;;AACA,UAAIA,KAAK,IAAI,GAAb,EAAkB;AAChB;AACAgC,QAAAA,SAAS,CAACG,CAAD,CAAT,CAAalE,KAAb,CAAmBiE,SAAnB,IAAgCH,UAAU,CAACG,SAAD,CAAV,GAAwB,IAAxD;AAEAH,QAAAA,UAAU,CAACG,SAAD,CAAV,IAAyBI,MAAM,GAAGzE,MAAlC;AACD,OALD,MAKO;AACL,YAAIwE,aAAa,CAACL,SAAS,CAACG,CAAD,CAAV,EAAe,eAAf,CAAb,KAAiD,IAArD,EAA2D;AACzD;AACAH,UAAAA,SAAS,CAACG,CAAD,CAAT,CAAalE,KAAb,CAAmBiE,SAAnB,IAAgCP,iBAAiB,CAACO,SAAD,CAAjB,GAA+B,IAA/D;AAEAP,UAAAA,iBAAiB,CAACO,SAAD,CAAjB,IAAgCI,MAAM,GAAGzE,MAAzC;AACD,SALD,MAKO;AACL;AACAmE,UAAAA,SAAS,CAACG,CAAD,CAAT,CAAalE,KAAb,CAAmBiE,SAAnB,IAAgCJ,kBAAkB,CAACI,SAAD,CAAlB,GAAgC,IAAhE;AAEAJ,UAAAA,kBAAkB,CAACI,SAAD,CAAlB,IAAiCI,MAAM,GAAGzE,MAA1C;AACD;AACF;AACF,KAxD8B,CA0D/B;;;AACA,WAAO,IAAP;AACD,GA5DD,CAlUwB,CAgYxB;;;AACA,WAAS0C,mBAAT,CAA6BkC,IAA7B,EAAmCnG,OAAnC,EAA4C;AAE1C,QAAGA,OAAO,CAACuB,MAAR,CAAe4E,IAAf,CAAH,EAAyB;AACvB,UAAGC,KAAK,CAACpG,OAAO,CAACuB,MAAR,CAAe4E,IAAf,CAAD,CAAR,EAAgC;AAC9B,eAAOnG,OAAO,CAACuB,MAAR,CAAe4E,IAAf,CAAP;AACD,OAFD,MAGK;AACH,eAAOnG,OAAO,CAACuB,MAAR,CAAe4E,IAAf,IAAuB,IAA9B;AACD;AACF;;AAED,WAAO,KAAP;AAED;;AAED,WAASJ,aAAT,CAAuBM,IAAvB,EAA6BC,SAA7B,EAAwC;AACtC,QAAI,CAACD,IAAD,IAAS,OAAOC,SAAP,KAAqB,QAAlC,EAA4C;AAC1C,aAAO,KAAP;AACD,KAFD,MAEO,IACLD,IAAI,CAACjF,SAAL,IACAiF,IAAI,CAACjF,SAAL,CACGmF,IADH,GAEGC,KAFH,CAES,OAFT,EAGGC,OAHH,CAGWH,SAHX,IAGwB,CAAC,CALpB,EAML;AACA,aAAO,IAAP;AACD,KARM,MAQA;AACL,aAAO,KAAP;AACD;AACF,GA9ZuB,CAgaxB;;;AACAxG,EAAAA,QAAQ,CAACG,GAAT,CAAaC,IAAb,CAAkB2B,SAAlB,GAA8B/B,QAAQ,CAACG,GAAvC,CAjawB,CAmaxB;;AACA,SAAOH,QAAP;AACD,CA3aD","sourcesContent":["/*!\n * Toastify js 1.11.1\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.11.1\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.style = options.style || Toastify.defaults.style;\n      this.options.style.background = Toastify.defaults.backgroundColor || options.backgroundColor;\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"span\");\n        closeElement.innerHTML = \"&#10006;\";\n\n        closeElement.className = \"toast-close\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || this.options.selector instanceof ShadowRoot) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n"]},"metadata":{},"sourceType":"script"}